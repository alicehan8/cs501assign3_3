package com.example.assign3_3

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.ExperimentalFoundationApi
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.remember
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.assign3_3.ui.theme.Assign3_3Theme

data class Contact(val name: String)
data class Letter(val letter: String, val contacts: List<Contact>)


class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            Assign3_3Theme {
                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->
                    ContactList(modifier = Modifier.padding(innerPadding))
                }
            }
        }
    }
}

@OptIn(ExperimentalFoundationApi::class)
@Composable
fun ContactList(modifier: Modifier = Modifier){
    // list of contacts generated by ChatGPT
    val ContactsByLetter = remember { listOf( Letter("A", listOf( Contact("Alice Han"), Contact("Aaron Smith"), Contact("Amelia Johnson"), Contact("Andrew Wilson"), Contact("Ava Thompson") )), Letter("B", listOf( Contact("Ben Carter"), Contact("Bianca Lopez"), Contact("Brian Lee"), Contact("Brooke Adams"), Contact("Brandon Flores") )), Letter("C", listOf( Contact("Carlos Gomez"), Contact("Catherine Young"), Contact("Chris Evans"), Contact("Chloe Nguyen"), Contact("Clara Martinez") )), Letter("D", listOf( Contact("Daniel Kim"), Contact("Diana Patel"), Contact("David Brown"), Contact("Derek Lewis"), Contact("Dylan Scott") )), Letter("E", listOf( Contact("Ella Wilson"), Contact("Ethan Miller"), Contact("Emily Davis"), Contact("Elijah Hall"), Contact("Erin Moore") )), Letter("F", listOf( Contact("Faith Taylor"), Contact("Felix Harris"), Contact("Fiona White"), Contact("Francis Ward"), Contact("Freya Cook") )), Letter("G", listOf( Contact("Gabriel Turner"), Contact("Grace Phillips"), Contact("George Parker"), Contact("Gianna Rivera"), Contact("Gavin Cooper") )), Letter("H", listOf( Contact("Hannah Collins"), Contact("Henry Stewart"), Contact("Hailey Foster"), Contact("Hudson Reed"), Contact("Harper Allen") )), Letter("J", listOf( Contact("Jack Thompson"), Contact("Jasmine Chen"), Contact("Jacob Robinson"), Contact("Julia Morris"), Contact("Jordan Price") )), Letter("L", listOf( Contact("Liam Murphy"), Contact("Layla Kelly"), Contact("Lucas Howard"), Contact("Leah Cox"), Contact("Logan Bell") )), Letter("M", listOf( Contact("Michael Scott"), Contact("Maria Garcia"), Contact("Matthew Hall"), Contact("Mia Brooks"), Contact("Mason Hughes") )), Letter("S", listOf( Contact("Sophia White"), Contact("Samuel Green"), Contact("Samantha Wright"), Contact("Sebastian Ward"), Contact("Scarlett James") )), Letter("T", listOf( Contact("Thomas Clark"), Contact("Tina Rodriguez"), Contact("Tyler Lewis"), Contact("Taylor Mitchell"), Contact("Tristan Long") )), Letter("Z", listOf( Contact("Zachary King"), Contact("Zoey Martinez"), Contact("Zane Phillips"), Contact("Zara Bennett"), Contact("Zion Russell") )) ) }

    Column(modifier = modifier){
        Text("Contacts", style = MaterialTheme.typography.titleLarge, textAlign = TextAlign.Left, modifier = Modifier.fillMaxWidth().background(color = MaterialTheme.colorScheme.primaryContainer).padding(vertical = 16.dp))

        LazyColumn(modifier = Modifier.fillMaxSize()){
            ContactsByLetter.forEach { letter ->
                stickyHeader {
                    Text(letter.letter, style = MaterialTheme.typography.titleMedium, textAlign = TextAlign.Left, modifier = Modifier
                        .fillMaxWidth()
                        .background(MaterialTheme.colorScheme.surfaceVariant.copy(alpha = 0.95f)) // Semi-transparent for effect
                        .padding(horizontal = 16.dp, vertical = 8.dp))
                }
                items(letter.contacts.size){ index ->
                    Text(letter.contacts[index].name, style = MaterialTheme.typography.bodyLarge, textAlign = TextAlign.Left, modifier = Modifier.fillMaxWidth())
                }
            }
        }
    }
}

@Composable
fun Greeting(name: String, modifier: Modifier = Modifier) {
    Text(
        text = "Hello $name!",
        modifier = modifier
    )
}

@Preview(showBackground = true)
@Composable
fun GreetingPreview() {
    Assign3_3Theme {
        Greeting("Android")
    }
}